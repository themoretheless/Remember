<UserControl x:Class="Remember.Wpf.Controls.CardControls"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:nf="clr-namespace:Remember.Wpf.NewFolder"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    
    <UserControl.Resources>

        <nf:RelativePositionConverter x:Key="relativePositionConverter" />
        <nf:RectConverter x:Key="RectConverter" />

        <Color x:Key="GreenColor">#81e069</Color>
        <Color x:Key="RedColor">#fc4242</Color>

        <SolidColorBrush x:Key="GreenBrush" Color="{StaticResource GreenColor}" Opacity=".4" />
        <SolidColorBrush x:Key="RedBrush" Color="{StaticResource RedColor}" Opacity=".4" />

        <Storyboard x:Key="IncreaseOpacity" TargetProperty="Background.(SolidColorBrush.Opacity)">
            <DoubleAnimation To="1" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="DecreaseOpacity" TargetProperty="Background.(SolidColorBrush.Opacity)">
            <DoubleAnimation To="0.7" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="RRR" TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleX)">
            <DoubleAnimation To="0.7" Duration="0:0:0.2"/>
        </Storyboard>

        <Style x:Key="CardOperationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="MainGrid">
                            <VisualStateManager.VisualStateGroups>
                                
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">                                        
                                        <Storyboard>     
                                            
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                         To="0.4" Duration="0:0:0.600">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                         
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                         To="1" Duration="0:0:0.600">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>


                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush"
                                                         To="200" Duration="0:0:0.200">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush"
                                                         To="200" Duration="0:0:0.200">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>


                            <Border x:Name="yyy" Background="{TemplateBinding Background}" BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="White" Opacity=".6" />
                                </Border.BorderBrush>
                                <Grid>
                                    <Rectangle x:Name="pressLight" >
                                        <Rectangle.Clip>
                                            <RectangleGeometry RadiusX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.BorderRadius)}"
                                                           RadiusY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.BorderRadius)}">
                                                <RectangleGeometry.Rect>
                                                    <MultiBinding Converter="{StaticResource RectConverter}">
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="ActualWidth"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="ActualHeight"/>
                                                    </MultiBinding>
                                                </RectangleGeometry.Rect>
                                            </RectangleGeometry>
                                        </Rectangle.Clip>
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.MouseOverBackgroundColor)}"/>
                                        </Rectangle.Fill>
                                        <Rectangle.OpacityMask>
                                            <RadialGradientBrush x:Name="brush" MappingMode="Absolute" RadiusY="200" RadiusX="200">
                                                <RadialGradientBrush.Center>
                                                    <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(nf:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(nf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.Center>
                                                <RadialGradientBrush.GradientOrigin>
                                                    <MultiBinding Converter="{StaticResource relativePositionConverter}">
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(nf:PointerTracker.RootObject)"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(nf:PointerTracker.Position)" />
                                                    </MultiBinding>
                                                </RadialGradientBrush.GradientOrigin>
                                                <GradientStop x:Name="offset"
                                                              Color="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.MouseOverBackgroundColor)}"
                                                              Offset="0"/>
                                                <GradientStop Color="Transparent"
                                                              Offset="1"/>
                                            </RadialGradientBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>


                                    <!--<Path x:Name="PathIcon" Width="15" Height="25" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="17,0,0,0" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>-->
                                    <!--<ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                                </Grid>
                            </Border>



                            <!-- Content -->
                            <Border BorderBrush="BlueViolet"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.BorderRadius)}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>

                           


                            <Grid x:Name="border">
                                <!--<Border x:Name="borderMouseOver"
                                    BorderBrush="Blue"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.BorderOpacity)}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.BorderRadius)}"/>-->

                                <Border BorderBrush="Blue"
                                    OpacityMask="{nf:RevealBrush Color=Blue, Opacity=0.3}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.BorderRadius)}"/>
                            </Grid>
                        </Grid>

                        <ControlTemplate.Triggers>


                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter TargetName="yyy" Property="BorderThickness" Value="2"/>-->

                                <!--<Setter TargetName="background" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.MouseOverBackground)}"/>-->
                                <!--<Setter TargetName="contentPresenter" Property="TextBlock.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.MouseOverForeground)}"/>-->
                                <!--<Setter TargetName="borderMouseOver" Property="Opacity"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(nf:RevealElement.MouseOverBorderOpacity)}"/>-->
                            </Trigger>
                            
                            
                            
                            
                            

                            <Trigger Property="IsPressed" Value="True">
                                
                                
                                    <!--<Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.2" ScaleY="1.2" />
                                    </Setter.Value>
                                </Setter>-->

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>

                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush"
                                                         To="200" Duration="0:0:0.200">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>


                                            <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush"
                                                         To="200" Duration="0:0:0.200">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>


                                            <!--<DoubleAnimation
                                                Duration="0:0:0.05"
                                                Storyboard.TargetName="MainGrid"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="0.95"/>
                                            <DoubleAnimation
                                                Storyboard.TargetName="MainGrid"
                                                Duration="0:0:0.05"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="0.95"/>-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!--<DoubleAnimation
                                                Duration="0:0:0.05"
                                                Storyboard.TargetName="MainGrid"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1"/>
                                            <DoubleAnimation
                                                Storyboard.TargetName="MainGrid"
                                                Duration="0:0:0.05"
                                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1"/>-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!--<DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.95"/>
                                            <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ContentPresenter"
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.95"/>-->
                                        </Storyboard>
                                    </BeginStoryboard>

                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource DecreaseOpacity}"/>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>                                  
                                        <Storyboard  RepeatBehavior="Forever" AutoReverse="False">
                                            <!--<DoubleAnimation                                             
                                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                To="30.0" Duration="0:0:0.1" AutoReverse="True"
                                                RepeatBehavior="Forever" />-->                                            
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
   
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0"
                Content="NO"          
                Margin="0 8 0 8"         
                Command="{Binding AddCommand}"
                Background="{StaticResource GreenBrush}"
                nf:RevealElement.MouseOverBackgroundColor="{StaticResource GreenColor}"             
                Style="{StaticResource CardOperationButtonStyle}"
                />

        <Button Grid.Column="1"
            Content="NO"          
            Margin="4 8 0 8"         
            Command="{Binding AddCommand}"
            Background="{StaticResource RedBrush}"
            nf:RevealElement.MouseOverBackgroundColor="{StaticResource RedColor}"          
            Style="{StaticResource CardOperationButtonStyle}"
            />
    </Grid>

</UserControl>   